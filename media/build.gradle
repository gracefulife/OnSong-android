/*
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin_version}"

    api "com.android.support:support-core-ui:${versions.supportLibrary}"
    api "com.android.support:support-fragment:${versions.supportLibrary}"
    api "com.android.support:support-media-compat:${versions.supportLibrary}"

    api "com.google.code.gson:gson:${versions.gson}"

    // ExoPlayer dependencies

    // This allows UAMP to utilize a local version of ExoPlayer, which is particularly
    // useful for extending the MediaSession extension, as well as for testing and
    // customization. If the "exoplayerRoot" property is set, all of these modules
    // will be included in the project.
    if (project.ext.hasProperty('exoplayerRoot') && project.ext.exoplayerRoot != null) {
        api project(':exoplayer-library-core')
        api project(':exoplayer-library-ui')
        api project(':exoplayer-extension-mediasession')
    } else {
        api "com.google.android.exoplayer:exoplayer-core:${versions.exoplayer}"
        api "com.google.android.exoplayer:exoplayer-ui:${versions.exoplayer}"
        api "com.google.android.exoplayer:extension-mediasession:${versions.exoplayer}"
    }

    // Glide dependencies
    api "com.github.bumptech.glide:glide:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"

    // Testing
    androidTestImplementation "com.android.support.test:runner:${versions.testRunner}"
}
